	###############
	# Python Venv #
	###############
	<<---| Mac Venv |--->>
python3 -m venv venv
. venv/bin/activate
python3 -m pip install --upgrade pip
python3 -m pip install -r requirements.txt
python3 -m pip install --upgrade --force-reinstall -r requirements.txt
python3 -m pip freeze > requirements.txt

$ deactivate

	<<---| Git Bash Venv |--->>
python -m venv venv
source venv/activate
python -m pip install --upgrade pip
python -m pip install -r requirements.txt
python -m pip install --upgrade --force-reinstall -r requirements.txt
python -m pip freeze > requirements.txt

$ deactivate

	##############
	# Flask Venv #
	##############
	<<---| Mac Flask Venv |--->>

python3 -m venv venv
source venv/bin/activate
python3 -m pip install --upgrade pip
python3 -m pip install -r requirements.txt
python3 -m pip install --upgrade --force-reinstall -r requirements.txt
cat requirements.txt
python3 -m pip freeze --local | grep -v ‘^\-e’ | cut -d = -f 1 | xargs -n1 pip install -U
python3 -m pip freeze > requirements.txt
export FLASK_APP=<?????>
export FLASK_ENV=development
flask init-db
flask run

$ deactivate

	<<---| Git Bash Flask Venv |--->>

python -m venv venv
source venv/bin/activate
python -m pip install --upgrade pip
python -m pip install -r requirements.txt
python -m pip install --upgrade --force-reinstall -r requirements.txt
python -m pip freeze > requirements.txt
export FLASK_APP=<?????>
export FLASK_ENV=development
flask init-db
flask mock-db
flask run

$ deactivate

	#######
	# Pip #
	#######

$ pip --version

	##########################
	# Install/Update/Upgrade #
	##########################
		<<---| Mac |--->>
##### Pip install packages #####
$ pip3 install <?????>
		
##### Upgrade a Pip package #####
$ pip3 install <?????> --upgrade

##### Upgrade requirements.txt packages #####
$ pip3 install -r requirements.txt --upgrade

##### Upgrade Pip #####
$ pip3 install -U pip
$ python3 -m pip install -U pip

##### Copy pip list to clipboard #####
$ pip3 list | pbcopy

##### Paste pip list outdated to clipboard #####
$ pip3 list --outdated | pbcopy

##### Paste pip list outdated to file #####
$ pbpaste > pip-outdated.txt

##### Show pip package #####
$ pip3 show <?????> <?????>

##### Update/Upgrade all Pip in Venv #####
$ pip freeze --local | grep -v ‘^\-e’ | cut -d = -f 1 | xargs -n1 pip install -U

##### Update/Upgrade all global pip packages #####
$ pip3 list -o | grep -v -i warning | cut -f1 -d’ ' | tr ” ” “\n” | awk ‘{if(NR>=3)print}’ | cut -d’ ' -f1 | xargs -n1 pip3 install -U

	<<---| Git Bash |--->>
##### Pip install packages #####
$ python -m pip install <?????>
		
##### Upgrade a Pip package #####
$ python -m pip install <?????> --upgrade

##### Upgrade requirements.txt packages #####
$ python -m pip install -r requirements.txt --upgrade

##### Upgrade Pip #####
$ python -m pip install -U pip
$ python -m pip install -U pip

##### Copy pip list to clipboard #####
$ python -m pip list | clip

##### Paste pip list outdated to clipboard #####
$ python -m pip list --outdated | clip

##### Paste pip list outdated to file #####
$ clip > pip-outdated.txt

##### Show pip package #####
$ python -m pip show <?????> <?????>

##### Update/Upgrade all Pip in Venv #####
$ python -m pip freeze --local | grep -v ‘^\-e’ | cut -d = -f 1 | xargs -n1 pip install -U

##### Update/Upgrade all global pip packages #####
$ python -m pip list -o | grep -v -i warning | cut -f1 -d’ ' | tr ” ” “\n” | awk ‘{if(NR>=3)print}’ | cut -d’ ' -f1 | xargs -n1 pip3 install -U

	########################
	# Pip requirements.txt #
	########################
	<<---| Mac |--->>
##### Install pip packages in requirements.txt #####
$ pip3 install -r requirements.txt

#####  Add pip packages to requirements.txt #####
$ pip3 freeze > requirements.txt

##### View requirements.txt contents #####
$ cat requirements.txt

##### Copy requirements.txt contents to clipboard #####
$ pbcopy < requirements.txt

##### Uninstall system Python pip packages #####
$ pip3 uninstall -r requirements.txt

	# Or to remove all at once #

 pip3 uninstall -r requirements.txt -y

	<<---| Git Bash |--->>
##### Install pip packages in requirements.txt #####
$ python -m pip install -r requirements.txt

#####  Add pip packages to requirements.txt #####
$ python -m pip freeze > requirements.txt

##### View requirements.txt contents #####
$ cat requirements.txt

##### Copy requirements.txt contents to clipboard #####
$ clip < requirements.txt

##### Uninstall system Python pip packages #####
$ python -m pip uninstall -r requirements.txt

	# Or to remove all at once #
$ python -m pip uninstall -r requirements.txt -y

	##############
	# youtube-dl #
	##############
youtube-dl -cit --extract-audio --audio-format mp3 'bestaudio[ext=mp3]/best[ext=mp3]/best' '<video url>'

youtube-dl -f mp4'bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best' '<video url>'

youtube-dl --playlist-items 2,3,7,10 '<playlist_url>'

youtube-dl --playlist-start 10 '<playlist_url>'

youtube-dl --playlist-start 2 --playlist-end 5 '<playlist_url>'

youtube-dl --list-formats  '<video_url>'

youtube-dl -f best  '<video_url>'

youtube-dl -f bestvideo+bestaudio  '<video_url>'

youtube-dl -f mp4  '<video_url>'

youtube-dl -f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best'  '<video_url>'

youtube-dl -f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best' -o "%(title)s-%(id)s.%(ext)s"  '<video_url>'

youtube-dl -o '%(title)s.%(ext)s'  '<video_url>'
